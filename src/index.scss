:root {
  /* dark shades of primary color*/
  --clr-primary-1: hsl(222, 47%, 11%);
  --clr-primary-2: hsl(226, 57%, 21%);
  --clr-primary-12: hsl(217, 33%, 17%);
  --clr-primary-3: rgb(121, 87, 68);
  --clr-primary-4: rgb(147, 106, 83);
  /* primary/main color */
  --clr-primary-5: rgb(171, 122, 95);
  /* lighter shades of primary color */
  --clr-primary-6: rgb(185, 145, 121);
  --clr-primary-7: hsl(22, 31%, 67%);
  --clr-primary-8: hsl(20, 31%, 74%);
  --clr-primary-9: hsl(22, 31%, 81%);
  --clr-primary-10: hsl(22, 31%, 88%);
  /* mine */
  --clr-primary-11: hsl(271, 68%, 32%);
  --clr-primary-13: hsl(174, 79%, 43%);
  --clr-primary-14: hsl(180, 46%, 95%);
  /* darkest grey - used for headings */
  --clr-grey-1: hsl(209, 61%, 16%);
  --clr-grey-2: hsl(211, 39%, 23%);
  --clr-grey-3: hsl(209, 34%, 30%);
  --clr-grey-4: hsl(209, 28%, 39%);
  /* grey used for paragraphs */
  --clr-grey-5: rgb(97, 125, 152);
  --clr-grey-6: rgb(130, 154, 176);
  --clr-grey-7: rgb(158, 178, 199);
  --clr-grey-8: rgb(188, 204, 220);
  --clr-grey-9: rgb(218, 226, 236);
  --clr-grey-10: rgb(241, 245, 248);
  --clr-white: rgb(255, 255, 255);
  --clr-red-dark: hsl(360, 67%, 44%);
  --clr-red-light: hsl(360, 71%, 66%);
  --clr-green-dark: hsl(125, 67%, 44%);
  --clr-green-light: hsl(125, 71%, 66%);
  --clr-black: #222;
  /* mine */
  --clr-black-light: #222233;
  --clr-purple: #cfa7f6;
  --clr-blue-light: #aaccff;
  --clr-text-1: rgb(226 232 240);
  /* */
  /* --transition: all 0.3s linear;
  --spacing: 0.1rem;
  --radius: 0.25rem;
  --light-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  --dark-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  --max-width: 1170px;
  --fixed-width: 620px; */
}
/*
=============== 
Global Styles
===============
*/

*,
::after,
::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  color: var(--clr-text-1);
  /* background: var(--clr-black-light);
  color: var(--clr-grey-7);
  line-height: 1.5;
  font-size: 0.875rem; */
}

$modes: (
  light: (
    color: var(--clr-black),
    logo: var(--clr-primary-13),
    background-color-main: var(--clr-grey-10),
    background-color-soft: var(--clr-grey-9),
    background-navbar: var(--clr-primary-14),
    border: var(--clr-grey-3),
  ),
  dark: (
    color: var(--clr-text-1),
    logo: var(--clr-primary-13),
    background-color-main: var(--clr-primary-1),
    background-color-soft: var(--clr-primary-12),
    background-navbar: var(--clr-primary-2),
    border: var(--clr-grey-7),
  ),
);

@mixin modify($modes) {
  @each $mode, $map in $modes {
    .#{$mode} & {
      $mode-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($modes, $mode), '#{$key}');
        $mode-map: map-merge(
          $mode-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $mode-map: null !global;
    }
  }
}

@function moded($key) {
  @return map-get($mode-map, $key);
}
